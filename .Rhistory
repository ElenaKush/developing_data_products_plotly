knitr::opts_chunk$set(echo = FALSE)
if("pacman" %in% rownames(installed.packages()) == FALSE){ install.packages("pacman") }
library(pacman)
p_load(dplyr,
stringr,
plotly)
local_path <- "C:/Users/kushnarevaei/Documents/GitHub/JH_R_Course/Course9/Week3/Project9.3/developing_data_products_plotly/"
URL_cases_global <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
download.file(URL_cases_global,
destfile = paste0(local_path,"data/cases_global.csv"))
download.file(URL_cases_global,
destfile = paste0(local_path,"data/cases_global.csv"))
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
URL_deaths_global <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
download.file(URL_deaths_global,
destfile = paste0(local_path,"data/deaths_global.csv"))
deaths_global <- read.csv(paste0(local_path,"data/deaths_global.csv"))
View(cases_global)
lastdate <- names(cases_global)[ncol(cases_global)]
lastdate <- as.Date(str_remove(lastdate, "X"), "%m.%e.%y")
cases_global %>%
group_by(Country.Region = cases_global$Country.Region)
test <- cases_global %>%
group_by(Country.Region = cases_global$Country.Region)
View(test)
dim(cases_global)
deaths_global <- deaths_global %>%
group_by(Country.Region = deaths_global$Country.Region) %>%
summarise(total_deaths = sum(total_deaths))
dim(deaths_global)
lastdate <- names(cases_global)[ncol(cases_global)]
lastdate <- as.Date(str_remove(lastdate, "^X"), "%m.%e.%y")
names(cases_global) <- str_remove(names(cases_global), "^X")
names(cases_global)
deaths_global <- deaths_global %>%
group_by(Country.Region = deaths_global$Country.Region) %>%
summarise(total_deaths = sum(total_deaths))
names(deaths_global)
names(deaths_global) <- str_remove(names(deaths_global), "^X")
names(deaths_global)
lastdate <- names(cases_global)[ncol(cases_global)]
lastdate <- as.Date(lastdate, "%m.%e.%y")
?gather
?pivot_longer
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases")
p_load(dplyr,
stringr,
tidyr,
plotly)
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases")
View(test)
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y"))
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date)
cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date)
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y"))
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
deaths_global <- deaths_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Deaths") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Deaths = sum(Deaths))
View(deaths_global)
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
deaths_global <- read.csv(paste0(local_path,"data/deaths_global.csv"))
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
names(deaths_global) <- str_remove(names(deaths_global), "^X")
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0)
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0)
names(cases_global) <- str_remove(names(cases_global), "^X")
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0)
test <- cases_global %>%
mutate(total = ncol(cases_global))
View(test)
top15 <- cases_global %>%
mutate(total = ncol(cases_global)) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total))
View(top15)
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
top15 <- cases_global %>%
mutate(total = ncol(cases_global)) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total))
top15 <- cases_global %>%
mutate(total = ncol(cases_global)) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(cases_global$total))
View(cases_global)
top15 <- cases_global %>%
mutate(total = ncol(cases_global))
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)])
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total))
?arrange
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total))
cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total))
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total))
head(top15)
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(total)
head(top15)
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total))
head(top15)
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(top15, 15)
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(15)
top15
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases))
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
##filter(Cases != 0, Country.Region %in% top15$Country.Region)
filter(Country.Region %in% top15$Country.Region)
test <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
deaths_global <- read.csv(paste0(local_path,"data/deaths_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
names(deaths_global) <- str_remove(names(deaths_global), "^X")
lastdate <- names(cases_global)[ncol(cases_global)]
lastdate <- as.Date(lastdate, "%m.%e.%y")
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(15)
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
##dim(deaths_global)
##names(deaths_global)
deaths_global <- deaths_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Deaths") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Deaths = sum(Deaths)) %>%
filter(Country.Region %in% top15$Country.Region)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date"))
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
head(test, 40)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date)
head(test, 40)
head(test, 60)
head(test, 100)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(id = row_number())
head(test, 100)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
head(test, 100)
?plot_ly
plot_ly(test, x = Days.Since.First.Case, y = Cases, type = 'line')
plot_ly(test, x = Days.Since.First.Case, y = Cases, ype = 'scatter', mode = 'lines')
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, ype = 'scatter', mode = 'lines')
class(test)
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines')
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colorscale = 'alphabet')
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colorscale = 'Viridis')
fig <- plot_ly(
type = 'scatter',
mode='markers',
y=rep(5, 40),
marker=list(
size=seq(0, 39),
color=seq(0, 39),
colorbar=list(
title='Colorbar'
),
colorscale='Viridis',
reversescale =T
)
)
fig <- plot_ly(
type = 'scatter',
mode='markers',
y=rep(5, 40),
marker=list(
size=seq(0, 39),
color=seq(0, 39),
colorbar=list(
title='Colorbar'
),
colorscale='Viridis',
reversescale =T
)
)
fig
plot_ly(
type = 'scatter',
mode='markers',
y=rep(5, 40),
marker=list(
size=seq(0, 39),
color=seq(0, 39),
colorbar=list(
title='Colorbar'
),
colorscale='Viridis',
reversescale =T
)
)
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(8)
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(8)
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colorscale = 'Viridis')
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines')
s <- seq(1, 4, by = 0.25)
fig <- plot_ly(x = ~s, y = ~s)
fig
fig <- plot_ly(x = s, y = s)
fig
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines')
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(15)
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines')
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
if("pacman" %in% rownames(installed.packages()) == FALSE){ install.packages("pacman") }
library(pacman)
p_load(dplyr,
stringr,
tidyr,
plotly)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines')
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Dark2")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "alphabet")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Set3")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "inferno")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Paired")
deaths_global <- read.csv(paste0(local_path,"data/deaths_global.csv"))
names(deaths_global) <- str_remove(names(deaths_global), "^X")
deaths_global <- deaths_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Deaths") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Deaths = sum(-Deaths)) %>%
filter(Country.Region %in% top15$Country.Region)
View(deaths_global)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Paired") %>%
add_lines(x = ~Days.Since.First.Case, y = ~Deaths, color = ~Country.Region, colors = "Paired")
knitr::opts_chunk$set(echo = FALSE)
if("pacman" %in% rownames(installed.packages()) == FALSE){ install.packages("pacman") }
library(pacman)
p_load(dplyr,
stringr,
tidyr,
plotly)
local_path <- "C:/Users/kushnarevaei/Documents/GitHub/JH_R_Course/Course9/Week3/Project9.3/developing_data_products_plotly/"
URL_cases_global <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
download.file(URL_cases_global,
destfile = paste0(local_path,"data/cases_global.csv"))
cases_global <- read.csv(paste0(local_path,"data/cases_global.csv"))
URL_deaths_global <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
download.file(URL_deaths_global,
destfile = paste0(local_path,"data/deaths_global.csv"))
deaths_global <- read.csv(paste0(local_path,"data/deaths_global.csv"))
names(cases_global) <- str_remove(names(cases_global), "^X")
names(deaths_global) <- str_remove(names(deaths_global), "^X")
lastdate <- names(cases_global)[ncol(cases_global)]
lastdate <- as.Date(lastdate, "%m.%e.%y")
top15 <- cases_global %>%
mutate(total = cases_global[, ncol(cases_global)]) %>%
group_by(Country.Region = cases_global$Country.Region) %>%
summarise(total = sum(total)) %>%
arrange(desc(total)) %>%
head(15)
cases_global <- cases_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Cases") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Cases = sum(Cases)) %>%
filter(Cases != 0, Country.Region %in% top15$Country.Region)
##dim(deaths_global)
##names(deaths_global)
deaths_global <- deaths_global %>%
pivot_longer(-c(1:4), names_to = "Date", values_to = "Deaths") %>%
mutate(Date = as.Date(Date, "%m.%e.%y")) %>%
group_by(Country.Region, Date) %>%
summarise(Deaths = sum(-Deaths)) %>%
filter(Country.Region %in% top15$Country.Region)
test <- left_join(cases_global, deaths_global, by = c("Country.Region" = "Country.Region", "Date" = "Date")) %>%
arrange(Country.Region, Date) %>%
group_by(Country.Region) %>%
mutate(Days.Since.First.Case = row_number())
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Paired") %>%
add_lines(x = ~Days.Since.First.Case, y = ~Deaths, yaxis = "y2", color = ~Country.Region, colors = "Paired")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Paired") %>%
add_lines(x = ~Days.Since.First.Case, y = ~Deaths, yaxis = "y2", color = ~Country.Region, colors = "Paired")
plot_ly(test, x = ~Days.Since.First.Case, y = ~Cases, yaxis = "Cases", color = ~Country.Region, type = 'scatter', mode = 'lines', colors = "Paired") %>%
add_lines(x = ~Days.Since.First.Case, y = ~Deaths, yaxis = "Deaths", color = ~Country.Region, colors = "Paired")
